name: Pull Request Checks

on:
  pull_request:
    branches: [ main, develop ]
  push:
    branches: [ main, develop ]

jobs:
      
  build:
    name: Build Application
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Bun
      uses: oven-sh/setup-bun@v1
      with:
        bun-version: latest
        
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '22'
        
    - name: Install dependencies
      run: bun install
      
    - name: Build application
      run: bun run build
      
  security-audit:
    name: Security Audit
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Bun
      uses: oven-sh/setup-bun@v1
      with:
        bun-version: latest
        
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '22'
        
    - name: Install dependencies
      run: bun install
      
    - name: Run security audit
      run: bun audit
      



  dependency-review:
    name: Dependency Review
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Dependency Review
      uses: actions/dependency-review-action@v3
      with:
        fail-on-severity: moderate
        
  pr-size-check:
    name: PR Size Check
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    
    steps:
    - name: Check PR size
      uses: actions/github-script@v7
      with:
        script: |
          const { data: pr } = await github.rest.pulls.get({
            owner: context.repo.owner,
            repo: context.repo.repo,
            pull_number: context.issue.number
          });
          
          const additions = pr.additions;
          const deletions = pr.deletions;
          const totalChanges = additions + deletions;
          
          if (totalChanges > 1000) {
            core.setFailed(`PR is too large (${totalChanges} lines changed). Consider breaking it into smaller PRs.`);
          } else if (totalChanges > 500) {
            core.warning(`PR is quite large (${totalChanges} lines changed). Consider if it can be broken down.`);
          }
          
  auto-assign-reviewers:
    name: Auto Assign Reviewers
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request' && github.event.action == 'opened'
    
    steps:
    - name: Auto assign reviewers
      uses: actions/github-script@v7
      with:
        script: |
          const reviewers = ['sw3do'];
          
          await github.rest.pulls.requestReviewers({
            owner: context.repo.owner,
            repo: context.repo.repo,
            pull_number: context.issue.number,
            reviewers: reviewers
          });
          
  label-pr:
    name: Auto Label PR
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request' && github.event.action == 'opened'
    
    steps:
    - name: Auto label based on files changed
      uses: actions/github-script@v7
      with:
        script: |
          const { data: files } = await github.rest.pulls.listFiles({
            owner: context.repo.owner,
            repo: context.repo.repo,
            pull_number: context.issue.number
          });
          
          const labels = [];
          
          const hasDocChanges = files.some(file => file.filename.includes('.md') || file.filename.includes('docs/'));
          const hasUIChanges = files.some(file => file.filename.includes('.vue') || file.filename.includes('.css'));
          const hasAPIChanges = files.some(file => file.filename.includes('api/') || file.filename.includes('server/'));
          const hasDiscordChanges = files.some(file => file.filename.includes('discord') || file.filename.includes('badge'));
          
          if (hasDocChanges) labels.push('documentation');
          if (hasUIChanges) labels.push('ui/ux');
          if (hasAPIChanges) labels.push('api');
          if (hasDiscordChanges) labels.push('discord-integration');
          
          if (labels.length > 0) {
            await github.rest.issues.addLabels({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              labels: labels
            });
          }